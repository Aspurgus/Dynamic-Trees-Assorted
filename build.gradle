buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
    }
}
apply plugin: "net.minecraftforge.gradle"

apply plugin: "eclipse"
apply plugin: "maven-publish"

version = "${project.minecraft}-${project.modVersion}"
group = "com.aspr.dynamictreesassorted"
archivesBaseName = project.modId

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = "1.8"

minecraft {
    mappings channel: project.mappingsChannel, version: project.mappings
    accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")
    runs {
        client {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                asprandalliums {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                asprandalliums {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"

            args "--mod", project.modId, "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                asprandalliums {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

dependencies {

    minecraft "net.minecraftforge:forge:${project.minecraft}-${project.forge}"

    //Dynamic Trees
    implementation fg.deobf("com.ferreusveritas.dynamictrees:DynamicTrees-${minecraft}:${property("dynamicTreesVersion")}")
    runtimeOnly fg.deobf("com.ferreusveritas.dynamictreesplus:DynamicTreesPlus-${minecraft}:${property("dynamicTreesPlusVersion")}")

}

repositories {

    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url  "https://maven.jaackson.me"
    }
    maven {
        url "https://harleyoconnor.com/maven"
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.modName,
                "Specification-Vendor"    : "Aspr !",
                "Specification-Version"   : "1.0",
                "Implementation-Title"    : project.modName,
                "Implementation-Version"  : project.modVersion,
                "Implementation-Vendor"   : "Aspr !",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
}